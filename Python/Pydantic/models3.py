# generated by datamodel-codegen:
#   filename:  jsonschema2.json
#   timestamp: 2024-11-27T11:08:39+00:00

from __future__ import annotations

from datetime import date
from enum import Enum
from typing import List, Optional, Union
from uuid import UUID

from pydantic import BaseModel, Field, confloat


class DepartmentEnum(Enum):
    Arts_and_Humanities = 'Arts and Humanities'
    Life_Sciences = 'Life Sciences'
    Science_and_Engineering = 'Science and Engineering'


class Credits(Enum):
    integer_10 = 10
    integer_20 = 20


class Module(BaseModel):
    id: Union[int, UUID] = Field(..., title='Id')
    name: str = Field(..., title='Name')
    professor: str = Field(..., title='Professor')
    credits: Credits = Field(..., title='Credits')
    registration_code: str = Field(..., title='Registration Code')


class Student(BaseModel):
    id: UUID = Field(..., title='Id')
    name: str = Field(..., title='Name')
    date_of_birth: date = Field(..., title='Date Of Birth')
    GPA: confloat(ge=0.0, le=4.0) = Field(..., title='Gpa')
    course: Optional[Union[str, int]] = Field(..., title='Course')
    department: DepartmentEnum
    fees_paid: bool = Field(..., title='Fees Paid')
    modules: Optional[List[Module]] = Field([], title='Modules')
